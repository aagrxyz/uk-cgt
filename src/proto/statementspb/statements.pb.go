// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: proto/statements.proto

package statementspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Statements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statements []*Statement `protobuf:"bytes,1,rep,name=statements,proto3" json:"statements,omitempty"`
}

func (x *Statements) Reset() {
	*x = Statements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_statements_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statements) ProtoMessage() {}

func (x *Statements) ProtoReflect() protoreflect.Message {
	mi := &file_proto_statements_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statements.ProtoReflect.Descriptor instead.
func (*Statements) Descriptor() ([]byte, []int) {
	return file_proto_statements_proto_rawDescGZIP(), []int{0}
}

func (x *Statements) GetStatements() []*Statement {
	if x != nil {
		return x.Statements
	}
	return nil
}

type Statement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ParserOneof:
	//
	//	*Statement_DefaultParser
	//	*Statement_T212Parser
	//	*Statement_IbkrParser
	//	*Statement_IgParser
	//	*Statement_IgDividendParser
	//	*Statement_MsVestParser
	//	*Statement_MsWithdrawlParser
	ParserOneof isStatement_ParserOneof `protobuf_oneof:"parser_oneof"`
	Directory   string                  `protobuf:"bytes,100,opt,name=directory,proto3" json:"directory,omitempty"`
	Filenames   []string                `protobuf:"bytes,101,rep,name=filenames,proto3" json:"filenames,omitempty"`
}

func (x *Statement) Reset() {
	*x = Statement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_statements_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statement) ProtoMessage() {}

func (x *Statement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_statements_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statement.ProtoReflect.Descriptor instead.
func (*Statement) Descriptor() ([]byte, []int) {
	return file_proto_statements_proto_rawDescGZIP(), []int{1}
}

func (m *Statement) GetParserOneof() isStatement_ParserOneof {
	if m != nil {
		return m.ParserOneof
	}
	return nil
}

func (x *Statement) GetDefaultParser() *DefaultParser {
	if x, ok := x.GetParserOneof().(*Statement_DefaultParser); ok {
		return x.DefaultParser
	}
	return nil
}

func (x *Statement) GetT212Parser() *T212Parser {
	if x, ok := x.GetParserOneof().(*Statement_T212Parser); ok {
		return x.T212Parser
	}
	return nil
}

func (x *Statement) GetIbkrParser() *IBKRParser {
	if x, ok := x.GetParserOneof().(*Statement_IbkrParser); ok {
		return x.IbkrParser
	}
	return nil
}

func (x *Statement) GetIgParser() *IGParser {
	if x, ok := x.GetParserOneof().(*Statement_IgParser); ok {
		return x.IgParser
	}
	return nil
}

func (x *Statement) GetIgDividendParser() *IGDividendParser {
	if x, ok := x.GetParserOneof().(*Statement_IgDividendParser); ok {
		return x.IgDividendParser
	}
	return nil
}

func (x *Statement) GetMsVestParser() *MSVestParser {
	if x, ok := x.GetParserOneof().(*Statement_MsVestParser); ok {
		return x.MsVestParser
	}
	return nil
}

func (x *Statement) GetMsWithdrawlParser() *MSWithdrawlParser {
	if x, ok := x.GetParserOneof().(*Statement_MsWithdrawlParser); ok {
		return x.MsWithdrawlParser
	}
	return nil
}

func (x *Statement) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *Statement) GetFilenames() []string {
	if x != nil {
		return x.Filenames
	}
	return nil
}

type isStatement_ParserOneof interface {
	isStatement_ParserOneof()
}

type Statement_DefaultParser struct {
	DefaultParser *DefaultParser `protobuf:"bytes,1,opt,name=default_parser,json=defaultParser,proto3,oneof"`
}

type Statement_T212Parser struct {
	T212Parser *T212Parser `protobuf:"bytes,2,opt,name=t212_parser,json=t212Parser,proto3,oneof"`
}

type Statement_IbkrParser struct {
	IbkrParser *IBKRParser `protobuf:"bytes,3,opt,name=ibkr_parser,json=ibkrParser,proto3,oneof"`
}

type Statement_IgParser struct {
	IgParser *IGParser `protobuf:"bytes,4,opt,name=ig_parser,json=igParser,proto3,oneof"`
}

type Statement_IgDividendParser struct {
	IgDividendParser *IGDividendParser `protobuf:"bytes,5,opt,name=ig_dividend_parser,json=igDividendParser,proto3,oneof"`
}

type Statement_MsVestParser struct {
	MsVestParser *MSVestParser `protobuf:"bytes,6,opt,name=ms_vest_parser,json=msVestParser,proto3,oneof"`
}

type Statement_MsWithdrawlParser struct {
	MsWithdrawlParser *MSWithdrawlParser `protobuf:"bytes,7,opt,name=ms_withdrawl_parser,json=msWithdrawlParser,proto3,oneof"`
}

func (*Statement_DefaultParser) isStatement_ParserOneof() {}

func (*Statement_T212Parser) isStatement_ParserOneof() {}

func (*Statement_IbkrParser) isStatement_ParserOneof() {}

func (*Statement_IgParser) isStatement_ParserOneof() {}

func (*Statement_IgDividendParser) isStatement_ParserOneof() {}

func (*Statement_MsVestParser) isStatement_ParserOneof() {}

func (*Statement_MsWithdrawlParser) isStatement_ParserOneof() {}

type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency  string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	CgtExempt bool   `protobuf:"varint,3,opt,name=cgt_exempt,json=cgtExempt,proto3" json:"cgt_exempt,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_statements_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_proto_statements_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_proto_statements_proto_rawDescGZIP(), []int{2}
}

func (x *Account) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Account) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Account) GetCgtExempt() bool {
	if x != nil {
		return x.CgtExempt
	}
	return false
}

type T212Parser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *T212Parser) Reset() {
	*x = T212Parser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_statements_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *T212Parser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*T212Parser) ProtoMessage() {}

func (x *T212Parser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_statements_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use T212Parser.ProtoReflect.Descriptor instead.
func (*T212Parser) Descriptor() ([]byte, []int) {
	return file_proto_statements_proto_rawDescGZIP(), []int{3}
}

func (x *T212Parser) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type IBKRParser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *IBKRParser) Reset() {
	*x = IBKRParser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_statements_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IBKRParser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IBKRParser) ProtoMessage() {}

func (x *IBKRParser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_statements_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IBKRParser.ProtoReflect.Descriptor instead.
func (*IBKRParser) Descriptor() ([]byte, []int) {
	return file_proto_statements_proto_rawDescGZIP(), []int{4}
}

func (x *IBKRParser) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type IGParser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *IGParser) Reset() {
	*x = IGParser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_statements_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IGParser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IGParser) ProtoMessage() {}

func (x *IGParser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_statements_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IGParser.ProtoReflect.Descriptor instead.
func (*IGParser) Descriptor() ([]byte, []int) {
	return file_proto_statements_proto_rawDescGZIP(), []int{5}
}

func (x *IGParser) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type IGDividendParser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *IGDividendParser) Reset() {
	*x = IGDividendParser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_statements_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IGDividendParser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IGDividendParser) ProtoMessage() {}

func (x *IGDividendParser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_statements_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IGDividendParser.ProtoReflect.Descriptor instead.
func (*IGDividendParser) Descriptor() ([]byte, []int) {
	return file_proto_statements_proto_rawDescGZIP(), []int{6}
}

func (x *IGDividendParser) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type MSVestParser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *MSVestParser) Reset() {
	*x = MSVestParser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_statements_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSVestParser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSVestParser) ProtoMessage() {}

func (x *MSVestParser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_statements_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSVestParser.ProtoReflect.Descriptor instead.
func (*MSVestParser) Descriptor() ([]byte, []int) {
	return file_proto_statements_proto_rawDescGZIP(), []int{7}
}

func (x *MSVestParser) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type MSWithdrawlParser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account         *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	WithdrawAccount *Account `protobuf:"bytes,2,opt,name=withdraw_account,json=withdrawAccount,proto3" json:"withdraw_account,omitempty"`
}

func (x *MSWithdrawlParser) Reset() {
	*x = MSWithdrawlParser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_statements_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSWithdrawlParser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSWithdrawlParser) ProtoMessage() {}

func (x *MSWithdrawlParser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_statements_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSWithdrawlParser.ProtoReflect.Descriptor instead.
func (*MSWithdrawlParser) Descriptor() ([]byte, []int) {
	return file_proto_statements_proto_rawDescGZIP(), []int{8}
}

func (x *MSWithdrawlParser) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *MSWithdrawlParser) GetWithdrawAccount() *Account {
	if x != nil {
		return x.WithdrawAccount
	}
	return nil
}

type DefaultParser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DefaultParser) Reset() {
	*x = DefaultParser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_statements_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultParser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultParser) ProtoMessage() {}

func (x *DefaultParser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_statements_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultParser.ProtoReflect.Descriptor instead.
func (*DefaultParser) Descriptor() ([]byte, []int) {
	return file_proto_statements_proto_rawDescGZIP(), []int{9}
}

var File_proto_statements_proto protoreflect.FileDescriptor

var file_proto_statements_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x61, 0x67, 0x72, 0x78, 0x79,
	0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x61, 0x67,
	0x72, 0x78, 0x79, 0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0xc9, 0x04, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x46, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x61, 0x67, 0x72, 0x78, 0x79,
	0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0b, 0x74, 0x32, 0x31, 0x32, 0x5f,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61,
	0x61, 0x67, 0x72, 0x78, 0x79, 0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x54, 0x32,
	0x31, 0x32, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x32, 0x31, 0x32,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0b, 0x69, 0x62, 0x6b, 0x72, 0x5f, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x61,
	0x67, 0x72, 0x78, 0x79, 0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x49, 0x42, 0x4b,
	0x52, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x62, 0x6b, 0x72, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x61, 0x67, 0x72, 0x78,
	0x79, 0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x49, 0x47, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x69, 0x67, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x50,
	0x0a, 0x12, 0x69, 0x67, 0x5f, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x61, 0x67,
	0x72, 0x78, 0x79, 0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x49, 0x47, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x10,
	0x69, 0x67, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72,
	0x12, 0x44, 0x0a, 0x0e, 0x6d, 0x73, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x61, 0x67, 0x72, 0x78,
	0x79, 0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x4d, 0x53, 0x56, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x73, 0x56, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x53, 0x0a, 0x13, 0x6d, 0x73, 0x5f, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x61, 0x67, 0x72, 0x78, 0x79, 0x7a, 0x2e, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x2e, 0x4d, 0x53, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6c,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x6c, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x65, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x72, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x64, 0x22, 0x58, 0x0a,
	0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x67, 0x74, 0x5f,
	0x65, 0x78, 0x65, 0x6d, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x67,
	0x74, 0x45, 0x78, 0x65, 0x6d, 0x70, 0x74, 0x22, 0x3f, 0x0a, 0x0a, 0x54, 0x32, 0x31, 0x32, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x61, 0x67, 0x72, 0x78, 0x79, 0x7a,
	0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x0a, 0x49, 0x42, 0x4b, 0x52,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x61, 0x67, 0x72, 0x78, 0x79,
	0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x08, 0x49, 0x47, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x61, 0x67, 0x72, 0x78, 0x79, 0x7a,
	0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x10, 0x49, 0x47, 0x44, 0x69,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x61, 0x67, 0x72, 0x78, 0x79, 0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x41, 0x0a, 0x0c, 0x4d, 0x53, 0x56, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12,
	0x31, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x61, 0x67, 0x72, 0x78, 0x79, 0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x11, 0x4d, 0x53, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x6c, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x61, 0x67, 0x72,
	0x78, 0x79, 0x7a, 0x2e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x61, 0x67, 0x72, 0x78, 0x79, 0x7a, 0x2e,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72,
	0x42, 0x14, 0x5a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_statements_proto_rawDescOnce sync.Once
	file_proto_statements_proto_rawDescData = file_proto_statements_proto_rawDesc
)

func file_proto_statements_proto_rawDescGZIP() []byte {
	file_proto_statements_proto_rawDescOnce.Do(func() {
		file_proto_statements_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_statements_proto_rawDescData)
	})
	return file_proto_statements_proto_rawDescData
}

var file_proto_statements_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_statements_proto_goTypes = []interface{}{
	(*Statements)(nil),        // 0: aagrxyz.trades.Statements
	(*Statement)(nil),         // 1: aagrxyz.trades.Statement
	(*Account)(nil),           // 2: aagrxyz.trades.Account
	(*T212Parser)(nil),        // 3: aagrxyz.trades.T212Parser
	(*IBKRParser)(nil),        // 4: aagrxyz.trades.IBKRParser
	(*IGParser)(nil),          // 5: aagrxyz.trades.IGParser
	(*IGDividendParser)(nil),  // 6: aagrxyz.trades.IGDividendParser
	(*MSVestParser)(nil),      // 7: aagrxyz.trades.MSVestParser
	(*MSWithdrawlParser)(nil), // 8: aagrxyz.trades.MSWithdrawlParser
	(*DefaultParser)(nil),     // 9: aagrxyz.trades.DefaultParser
}
var file_proto_statements_proto_depIdxs = []int32{
	1,  // 0: aagrxyz.trades.Statements.statements:type_name -> aagrxyz.trades.Statement
	9,  // 1: aagrxyz.trades.Statement.default_parser:type_name -> aagrxyz.trades.DefaultParser
	3,  // 2: aagrxyz.trades.Statement.t212_parser:type_name -> aagrxyz.trades.T212Parser
	4,  // 3: aagrxyz.trades.Statement.ibkr_parser:type_name -> aagrxyz.trades.IBKRParser
	5,  // 4: aagrxyz.trades.Statement.ig_parser:type_name -> aagrxyz.trades.IGParser
	6,  // 5: aagrxyz.trades.Statement.ig_dividend_parser:type_name -> aagrxyz.trades.IGDividendParser
	7,  // 6: aagrxyz.trades.Statement.ms_vest_parser:type_name -> aagrxyz.trades.MSVestParser
	8,  // 7: aagrxyz.trades.Statement.ms_withdrawl_parser:type_name -> aagrxyz.trades.MSWithdrawlParser
	2,  // 8: aagrxyz.trades.T212Parser.account:type_name -> aagrxyz.trades.Account
	2,  // 9: aagrxyz.trades.IBKRParser.account:type_name -> aagrxyz.trades.Account
	2,  // 10: aagrxyz.trades.IGParser.account:type_name -> aagrxyz.trades.Account
	2,  // 11: aagrxyz.trades.IGDividendParser.account:type_name -> aagrxyz.trades.Account
	2,  // 12: aagrxyz.trades.MSVestParser.account:type_name -> aagrxyz.trades.Account
	2,  // 13: aagrxyz.trades.MSWithdrawlParser.account:type_name -> aagrxyz.trades.Account
	2,  // 14: aagrxyz.trades.MSWithdrawlParser.withdraw_account:type_name -> aagrxyz.trades.Account
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_statements_proto_init() }
func file_proto_statements_proto_init() {
	if File_proto_statements_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_statements_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_statements_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_statements_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_statements_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*T212Parser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_statements_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IBKRParser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_statements_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IGParser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_statements_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IGDividendParser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_statements_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSVestParser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_statements_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSWithdrawlParser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_statements_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultParser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_statements_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Statement_DefaultParser)(nil),
		(*Statement_T212Parser)(nil),
		(*Statement_IbkrParser)(nil),
		(*Statement_IgParser)(nil),
		(*Statement_IgDividendParser)(nil),
		(*Statement_MsVestParser)(nil),
		(*Statement_MsWithdrawlParser)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_statements_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_statements_proto_goTypes,
		DependencyIndexes: file_proto_statements_proto_depIdxs,
		MessageInfos:      file_proto_statements_proto_msgTypes,
	}.Build()
	File_proto_statements_proto = out.File
	file_proto_statements_proto_rawDesc = nil
	file_proto_statements_proto_goTypes = nil
	file_proto_statements_proto_depIdxs = nil
}
